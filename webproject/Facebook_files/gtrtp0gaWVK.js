/*!CK:4291839039!*//*1401170597,178198863*/

if (self.CavalryLogger) { CavalryLogger.start_js(["LGxJn"]); }

__d("BroadcastRequestTokenizer.react",["CommentPrelude","DOMQuery","Event","Parent","React","XUITokenizer.react","cx","fbt","invariant"],function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){var p=null;function q(){o(p!==null);return p;}var r=k.createClass({displayName:'BroadcastRequestTokenizer',propTypes:{active:k.PropTypes.bool,entries:k.PropTypes.array.isRequired,onTokenChange:k.PropTypes.func.isRequired,onTriggerClick:k.PropTypes.func.isRequired,placeHolder:k.PropTypes.string.isRequired,searchSource:k.PropTypes.object.isRequired,sourceID:k.PropTypes.string.isRequired},componentDidMount:function(){var s=j.byTag(this.getDOMNode(),'form');this._listener=i.listen(h.find(s,'.'+"recommend_link"),'click',this._onTriggerClick);},componentWillMount:function(){o(p===null);p=this;},componentWillUnmount:function(){this._listener.remove();p=null;},render:function(){var s=(("_3yfm")+(!this.props.active?' '+"_3yfn":''));if(!this.props.active)return (k.DOM.div({className:s,onClick:this.props.onTriggerClick},k.DOM.div({className:"_3yfo"},this.props.placeHolder)));var t=("Search for Recommendations");return (l({className:s,entries:this.props.entries,onAddEntryAttempt:this._onAddRecommendationEntryAttempt,onInputBlur:this.props.onBlur,onRemoveEntryAttempt:this._onRemoveRecommendationEntryAttempt,placeholder:t,ref:"tokenizer",searchSource:this.props.searchSource,showEntriesOnFocus:true}));},componentDidUpdate:function(s,t){if(!s.active&&this.props.active)this.refs.tokenizer.focusInput();},_onTriggerClick:function(){g.expand(this.getDOMNode(),false);this.props.onTriggerClick();},_onAddRecommendationEntryAttempt:function(s){var t=this.props.entries;if(!t.some(function(u){return s.getUniqueID()===u.getUniqueID();})){t.push(s);this._onTokenChange(t);}},_onRemoveRecommendationEntryAttempt:function(s){var t=this.props.entries.filter(function(u){return s.getUniqueID()!==u.getUniqueID();});this._onTokenChange(t);},_onTokenChange:function(s){this.props.onTokenChange&&this.props.onTokenChange(s);},_addTokensAndActivateTokenizer:function(s){var t=this.props.entries;s.forEach(function(u){if(!t.some(function(v){return u.getUniqueID()===v.getUniqueID();}))t.push(u);});this._onTokenChange(t);this._onTriggerClick();},statics:{addTokens:function(s){q()._addTokensAndActivateTokenizer(s);}}});e.exports=r;},null);